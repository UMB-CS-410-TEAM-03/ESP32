#include "at_client.h"
#include <Arduino.h>
#include <SPIFFS.h>
#include <WiFiClientSecure.h>

#include "constants.h"

#define LED 21
#define TOUCH_SENSOR 19

static AtKey* at_key;
static AtClient* at_client;

#define DOOR_OPEN true
#define DOOR_CLOSED false
static const std::string DOOR_OPEN_MESSAGE = "OPEN SESAME";
static const std::string DOOR_CLOSE_MESSAGE = "CLOSE SESAME";
static bool DOOR_STATUS = false;

void setup()
{
    pinMode(LED, OUTPUT);
    pinMode(TOUCH_SENSOR, INPUT);

    const auto* chip = new AtSign("@moralbearbanana");
    const auto* app = new AtSign("@batmanariesbanh");

    // reads the keys on the chip
    const auto keys = keys_reader::read_keys(*chip);

    // creates the AtClient object (allows us to run operations)
    at_client = new AtClient(*chip, keys);
    // pkam authenticate into our atServer
    at_client->pkam_authenticate(SSID, PASSWORD);

    at_key = new AtKey("touch_event", chip, app);
}

void loop()
{
    if (DOOR_STATUS == DOOR_OPEN) {
        digitalWrite(LED, HIGH);
    } else {
        /* DOOR_STATUS is DOOR_CLOSED */
        digitalWrite(LED, LOW);
    }

    if (digitalRead(TOUCH_SENSOR) == HIGH) {
        delay(500);
        if (DOOR_STATUS == DOOR_OPEN) {
            DOOR_STATUS = DOOR_CLOSED;
        } else {
            /* DOOR_STATUS is DOOR_CLOSED */
            DOOR_STATUS = DOOR_OPEN;
        }

        if (DOOR_STATUS == DOOR_OPEN) {
            at_client->put_ak(*at_key, DOOR_OPEN_MESSAGE);
        } else {
            /* DOOR_STATUS is DOOR_CLOSED */
            at_client->put_ak(*at_key, DOOR_CLOSE_MESSAGE);
        }

        std::cout << "DOOR_STATUS: /" << DOOR_STATUS << "/ \n";
    }
}